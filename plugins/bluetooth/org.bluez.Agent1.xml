<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
    <interface name="org.bluez.Agent1">

        <method name="Release">
            <doc:doc>
                <doc:description>
                    <doc:para>This method gets called when the service daemon unregisters the agent.
                    An agent can use it to do cleanup tasks. There is no need to unregister the agent,
                    because when this method gets called it has already been unregistered.</doc:para>
                </doc:description>
            </doc:doc>
        </method>

        <method name="RequestPinCode">
            <arg type="o" name="device" direction="in">
                <doc:doc>
                    <doc:summary>The device object path.</doc:summary>
                </doc:doc>
            </arg>
            <arg type="s" name="pincode" direction="out">
                <doc:doc>
                    <doc:summary>The pincode.</doc:summary>
                </doc:doc>
            </arg>
            <doc:doc>
                <doc:description>
                    <doc:para>This method gets called when the service daemon needs to get the passkey for an authentication.
                    The return value should be a string of 1-16 characters length. The string can be alphanumeric.</doc:para>
                </doc:description>
            </doc:doc>
        </method>

        <method name="DisplayPinCode">
            <arg type="o" name="device" direction="in">
                <doc:doc>
                    <doc:summary>The device object path.</doc:summary>
                </doc:doc>
            </arg>
            <arg type="s" name="pincode" direction="in">
                <doc:doc>
                    <doc:summary>The pincode.</doc:summary>
                </doc:doc>
            </arg>
            <doc:doc>
                <doc:description>
                    <doc:para>This method gets called when the service daemon needs to display a pincode for an authentication.
                    An empty reply should be returned. When the pincode needs no longer to be displayed, the Cancel method of
                    the agent will be called. This is used during the pairing process of keyboards	that don't support Bluetooth 
                    2.1 Secure Simple Pairing, in contrast to DisplayPasskey which is used for those that do. This method will
                    only ever be called once since older keyboards do not support typing notification. Note that the PIN will
                    always be a 6-digit number, zero-padded to 6 digits. This is for harmony with the later specification.</doc:para>
                </doc:description>
            </doc:doc>
        </method>

        <method name="RequestPasskey">
            <arg type="o" name="device" direction="in">
                <doc:doc>
                    <doc:summary>The device object path.</doc:summary>
                </doc:doc>
            </arg>
            <doc:doc>
                <doc:description>
                    <doc:para>This method gets called when the service daemon needs to get the passkey for an authentication.
                    The return value should be a numeric value between 0-999999.</doc:para>
                </doc:description>
            </doc:doc>
        </method>

        <method name="DisplayPasskey">
            <arg type="o" name="device" direction="in">
                <doc:doc>
                    <doc:summary>The device object path.</doc:summary>
                </doc:doc>
            </arg>
            <arg type="s" name="passkey" direction="in">
                <doc:doc>
                    <doc:summary>The passkey.</doc:summary>
                </doc:doc>
            </arg>
            <arg type="q" name="entered" direction="in">
                <doc:doc>
                    <doc:summary>The number of already typed keys on the remote side.</doc:summary>
                </doc:doc>
            </arg>
            <doc:doc>
                <doc:description>
                    <doc:para>This method gets called when the service daemon needs to display a passkey for an authentication.
                    The entered parameter indicates the number of already typed keys on the remote side. An empty reply should
                    be returned. When the passkey needs no longer to be displayed, the Cancel method of the agent will be called.
                    During the pairing process this method might be called multiple times to update the entered value. Note that
                    the passkey will always be a 6-digit number, so the display should be zero-padded at the start if the value
                    contains less than 6 digits.</doc:para>
                </doc:description>
            </doc:doc>
        </method>


        <method name="RequestConfirmation">
            <arg type="o" name="device" direction="in">
                <doc:doc>
                    <doc:summary>The device object path.</doc:summary>
                </doc:doc>
            </arg>
            <arg type="s" name="passkey" direction="in">
                <doc:doc>
                    <doc:summary>The passkey.</doc:summary>
                </doc:doc>
            </arg>
            <doc:doc>
                <doc:description>
                    <doc:para>This method gets called when the service daemon needs to confirm a passkey for an authentication.
                    To confirm the value it should return an empty reply or an error in case the passkey is invalid. Note that
                    the passkey will always be a 6-digit number, so the display should be zero-padded at the start if the value
                    contains less than 6 digits.</doc:para>
                </doc:description>
            </doc:doc>
        </method>

        <method name="RequestAuthorization">
            <arg type="o" name="device" direction="in">
                <doc:doc>
                    <doc:summary>The device object path.</doc:summary>
                </doc:doc>
            </arg>
            <doc:doc>
                <doc:description>
                    <doc:para>This method gets called to request the user to authorize an incoming pairing attempt which would
                    in other circumstances trigger the just-works model, or when the user plugged in a device that implements
                    cable pairing. In the latter case, the device would not be connected to the adapter via Bluetooth yet.</doc:para>
                </doc:description>
            </doc:doc>
        </method>

        <method name="AuthorizeService">
            <arg type="o" name="device" direction="in">
                <doc:doc>
                    <doc:summary>The device object path.</doc:summary>
                </doc:doc>
            </arg>
            <arg type="s" name="uuid" direction="in">
                <doc:doc>
                    <doc:summary>The device uuid.</doc:summary>
                </doc:doc>
            </arg>
            <doc:doc>
                <doc:description>
                    <doc:para>This method gets called when the service daemon needs to authorize a connection/service request.</doc:para>
                </doc:description>
            </doc:doc>
        </method>

        <method name="Cancel">
            <doc:doc>
                <doc:description>
                    <doc:para>This method gets called to indicate that the agent request failed before a reply was returned.</doc:para>
                </doc:description>
            </doc:doc>
        </method>

    </interface>
</node>
